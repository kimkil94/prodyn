#!/bin/bash

# Kimkil=2016= for Masters of Apps
# v 0.8


GUEST_CONFIG_DIR="/etc/libvirt/qemu"
NETWORK_NAME="default"
SQUID_GUEST_DIR="/etc/squid3/guests_rules"
POUND_DIR="/etc/pound/"

set() {
GUEST_CONFIG=$1

echo "Setting up proxy rules for $GUEST_CONFIG ..."
echo "..."
#get MAC address of vNIC
MAC=$( cat $GUEST_CONFIG | grep "<mac address" | awk -F "'" '{print $2}')
#get IP address related to found MAC addr
IP=$(virsh net-dhcp-leases $NETWORK_NAME | grep $MAC | awk '{print $5 }' | cut -d / -f1)
#get HOSTNAME. that means subdomain for HTTP proxy
GUEST_HOSTNAME=$(cat $GUEST_CONFIG | grep "<name>" | awk -F "<name>" '{print $2}' | awk -F "</name>" '{print $1}' |  awk -F ";" '{print $1}')
# PORTS defined in guest hostname , delimiter ";"
PORTS=$(cat $GUEST_CONFIG  | grep "<name>" | awk -F "<name>" '{print $2}' | awk -F "</name>" '{print $1}' | awk -F ";" '{print $1=""; print $0}')

IP_SET="0"

echo "#########################################################"
echo "MAC address of $GUEST_HOSTNAME is : $MAC "
if [ ! -z "$IP" ];then
	echo "IP address of $GUEST_HOSTNAME is : $IP"
	IP_SET="9"
	
else
	echo "IP address of $GUEST_HOSTNAME is : NOT SET"
	IP_SET="1"
fi
echo "#################### PORTS SETING #######################"
echo "PORTS defined for $GUEST_HOSTNAME : $PORTS"
#echo "Adding record to /etc/hosts for domain $GUEST_HOSTNAME"
#echo "$IP  $GUEST_HOSTNAME # generated by proxy script /root/pokus.sh" >> /etc/hosts

}

STAT_FILE="/usr/share/wok/plugins/kimchi/ui/pages/tabs/proxy.html.tmpl"
create_header () {
	cat /root/css.file > $STAT_FILE
	echo "<h2> PROXY/IPTABLES RULES  </h2>" >> $STAT_FILE
	echo "<table id="tfhover" class="tftable" border="1">" >> $STAT_FILE
	echo "<tr><th>Hostname</th><th>Internal IP</th><th>Service</th><th>Internal port</th><th>External port</th><th>Type</th></tr>" >> $STAT_FILE
}

create_footer () {
	echo "</table>" >> $STAT_FILE
	echo "<p> <center>Last update $(date) </center></p>" >> $STAT_FILE
	echo "<p> <center> Next update $(date --date='5 minutes') </center> </p>" >> $STAT_FILE
}

#remove config files
rm /etc/pound/*guest*
rm /etc/pound/*listener*

#remove all IPTABLES rules from PREROUTING chanis from nat 
for i in $( iptables -t nat --line-numbers -L | grep ^[0-9] | awk '{ print $1 }' | tac ); do iptables -t nat -D PREROUTING $i; done
echo "" > /usr/share/wok/plugins/kimchi/ui/pages/tabs/proxy.html.tmpl

#create HTML header part
create_header
#get all conf file for GUESTS
for config in $GUEST_CONFIG_DIR/*.xml
do
	echo $config
	set $config
	for port in $PORTS
	do
	
	if [[ $port -eq "22" ]];then

		SSH_PORT="222"
		while iptables -t nat -L | grep ^DNAT | awk '{print $7}' | cut -d : -f 2 | grep $SSH_PORT ; do
			echo "[INFO] SSH PORT : $SSH_PORT is already bind"
			((SSH_PORT=SSH_PORT+1))
		done
		echo "[INFO] SSH_PORT is $SSH_PORT"
		echo "EXEC : iptables -t nat -A PREROUTING -p tcp  --dport $SSH_PORT -j DNAT --to-destination $IP:22 "
		iptables -t nat -A PREROUTING -p tcp  --dport $SSH_PORT -j DNAT --to-destination $IP:22
		echo "EXEC : iptables -I FORWARD -m state -d 192.168.122.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT "
		iptables -I FORWARD -m state -d 192.168.122.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT
		echo "<tr><td>$GUEST_HOSTNAME</td><td>$IP</td><td>SSH</td><td>$port</td><td>$SSH_PORT</td><td>IPTABLES RULE</td></tr>"  >> $STAT_FILE
		
	 elif [[ $port -eq "3306" ]];then

		DB_PORT="3307"
		while iptables -t nat -L | grep ^DNAT | awk '{print $7}' | cut -d : -f 2 | grep $DB_PORT ; do
			echo "[INFO] DB PORT : $DB_PORT is already bind"
			((DB_PORT=DB_PORT+1))
		done
		echo "[INFO] DB_PORT is $DB_PORT"
		echo "EXEC : iptables -t nat -A PREROUTING -p tcp  --dport $DB_PORT -j DNAT --to-destination $IP:3306 "
		iptables -t nat -A PREROUTING -p tcp  --dport $DB_PORT -j DNAT --to-destination $IP:3306
		echo "EXEC : iptables -I FORWARD -m state -d 192.168.122.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT "
		iptables -I FORWARD -m state -d 192.168.122.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT
		echo "<tr><td>$GUEST_HOSTNAME</td><td>$IP</td><td>Database</td><td>$port</td><td>$DB_PORT</td><td>IPTABLES RULE</td></tr>"  >> $STAT_FILE  

	else
		if [ -f $POUND_DIR$port''_listener.cfg'' ];then
			echo "Listener config for port $port exist skipping creation.."
			echo "<tr><td>$GUEST_HOSTNAME</td><td>$IP</td><td>HTTP</td><td>$port</td><td>$port</td><td>HTTP PROXY</td></tr>"  >> $STAT_FILE
			
		else
			 if [ $IP_SET -eq 1 ];then
				echo "IP NOT SET/ GUEST IS POWERED OFF"
			 else
				echo "IPADDR IS $IP DEBUG"
				echo "Including listener config for port: $port to guest.cfg"
				echo "Include \"$POUND_DIR$port"_listener.cfg"\" " >> $POUND_DIR'guest.cfg'
				echo "$POUND_DIR$port'_listener.cfg' does not exist, creating new one..."
				#echo "Include '"'$POUND_DIR$port'_listener.cfg''"'" >> $POUND_DIR'guest.cfg'
				touch $POUND_DIR$port'_listener.cfg'
				echo "<tr><td>$GUEST_HOSTNAME</td><td>$IP</td><td>HTTP</td><td>$port</td><td>$port</td><td>HTTP PROXY</td></tr>"  >> $STAT_FILE
				cat <<EOF > $POUND_DIR$port'_listener.cfg'
ListenHTTP
	Address 0.0.0.0
	Port    $port
	xHTTP           0
	Include "$POUND_DIR$port-guests.cfg"
End

EOF
			fi
		fi
			if [ $IP_SET -eq 1 ];then
                                echo "IP NOT SET/ GUEST IS POWERED OFF"
			else
				echo "[INFO] : Creating $POUND_DIR$port'-guests.cfg'"

				cat <<EOF >> $POUND_DIR$port'-guests.cfg'
Service
	HeadRequire "Host:.*$GUEST_HOSTNAME"
	BackEnd
		Address $IP
		Port    $port
        End
End
EOF
			fi
	fi		
	done

done
cat /etc/pound-default/443_listener.cfg > /etc/pound/443_listener.cfg
#cat /etc/pound-default/443-devservers.cfg >> /etc/pound/443-guests.cfg
cat /etc/pound-default/80-devservers.cfg  >> /etc/pound/80-guests.cfg



create_footer
/etc/init.d/pound force-reload


